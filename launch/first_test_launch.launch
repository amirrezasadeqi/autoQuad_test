<?xml version="1.0"?>
<launch>
  <!-- including the r200 launch file for getting 
  the video from r200 camera -->
  <include file="$(find realsense_camera)/launch/r200_nodelet_default.launch" />
  <!-- we need to run the usb_cam_node because the front camera needs this for giving the image to the 
       aruco markerfinder. -->
   <node pkg="usb_cam" type="usb_cam_node" name="usb_cam" output="screen">
     <param name="video_device" value="/dev/video3" />
     <param name="image_width" value="640" />
     <param name="image_height" value="480" />
     <param name="pixel_format" value="yuyv" />
     <param name="camera_frame_id" value="usb_cam" />
     <param name="io_method" value="mmap"/>
   </node>
   <!-- including the aruco marker finder for 
   detecting single marker -->
   <include file="$(find marker_finder)/launch/aruco_marker_finder_usb_cam.launch" />
   <!-- including the launch file for lucas kanade opticalflow -->
   <include file="$(find opencv_apps)/launch/lk_flow.launch">
        <arg name="image" default="/camera/color/image_raw" />
   </include>
   <!-- the custom node that reads the opticalflow data and publishes the mean velocity of x and y
        directions. for low speed of processor i changed this to a launch file and run it with the
        timed_roslaunch package with a delay of one seconde. -->
   <include file="$(find timed_roslaunch)/launch/timed_roslaunch.launch">
        <arg name="time" value="1"/>
        <arg name="pkg" value="opt_flow"/>
        <arg name="file" value="optflow.launch"/>
   </include>  
   <!-- launching the navigation node for autonomous guidance -->
   <node pkg="guid" type="nav_node" name="auto_guider" />
   <!-- launching the i2c_node for sending the auto commands to mid-ware board -->
   <node pkg="i2c_gate" type="i2c_node.py" name="i2c_bus" />
   <!-- launching the ultrasonic_sens_node.py for publishing the ultrasonic sensor data to the ros network -->
   <node pkg="ultrasonic_sens" type="ultrasonic_sens_node.py" name="ultrasonic_sens_node" />

</launch>